/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} n
 * @return {ListNode}
 */
var removeNthFromEnd = function(head, n) {
      let dummy = new ListNode()
        dummy.next = head
        let prev = dummy
        let cur1 = head
        let cur2 = head
    let left = 1
    let right = 1
    while (cur2.next) {
        if(right - left === n-1){
            left++
            prev = cur1
            cur1 = cur1.next
            right++
            cur2 = cur2.next
        }
        else {
            right++
            cur2 = cur2.next
        }
    }
    if(n===1){
       prev.next=null
    }
    else{
        cur1.val = cur1.next.val
        cur1.next = cur1.next.next
    }
    return dummy.next
};
