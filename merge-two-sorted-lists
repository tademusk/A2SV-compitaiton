/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(list1, list2) {
    let newnode = new ListNode(0)
    let iterator = newnode
    while(list1 && list2) {
        if (list1.val <= list2.val && list1){
            iterator.next = new ListNode(list1.val)
            list1 = list1.next
        }
        else{
           iterator.next = new ListNode(list2.val) 
           list2 = list2.next 
         }
         iterator = iterator.next
    }
    if(list1){
        while(list1){
            iterator.next = new ListNode(list1.val)
            iterator = iterator.next
            list1 = list1.next
        }
    }
    if(list2){
        while(list2){
            iterator.next = new ListNode(list2.val)
            iterator = iterator.next
            list2 = list2.next
        }
    }
    return newnode.next
};
