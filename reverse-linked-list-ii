/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} left
 * @param {number} right
 * @return {ListNode}
 */
const reverseBetween = (head, left, right) => {
    let tade = new ListNode (0, head)
    head = tade
    let i = 1;
    while(++i <= left) head = head.next

    let tail = head.next

    while(++left <= right) {
        next = tail.next
        tail.next = next.next
        next.next = head.next
        head.next = next
    }
    return tade.next


};
